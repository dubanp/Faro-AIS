"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ais_message_1 = __importDefault(require("./ais-message"));
const helpers_1 = require("../helpers");
const errors_1 = require("../errors");
class AisMessage24 extends ais_message_1.default {
    // eslint-disable-next-line max-statements
    constructor(messageType, channel, bitField) {
        super(messageType, channel, bitField);
        this.partNum = bitField.getInt(38, 2);
        if (this.partNum === 0) {
            this.setPartAProperties(bitField);
        }
        else if (this.partNum === 1) {
            this.setPartBProperties(bitField);
        }
        else {
            throw new errors_1.DecodingError(`Invalid part number '${this.partNum}' while decoding message type 24`, null);
        }
    }
    setPartAProperties(bitField) {
        this.name = bitField.getString(40, 120);
    }
    setPartBProperties(bitField) {
        this.typeAndCargo = bitField.getInt(40, 8);
        this.vendorId = bitField.getString(48, 18);
        this.model = bitField.getInt(66, 4);
        this.serial = bitField.getInt(70, 20);
        this.callsign = bitField.getString(90, 42);
        if (helpers_1.isAuxiliaryCraft(this.mmsi)) {
            this.mothershipMMSI = bitField.getInt(132, 30);
        }
        else {
            this.dimBow = bitField.getInt(132, 9);
            this.dimStern = bitField.getInt(141, 9);
            this.dimPort = bitField.getInt(150, 6);
            this.dimStarboard = bitField.getInt(156, 6);
        }
    }
}
exports.default = AisMessage24;
//# sourceMappingURL=ais-message-24.js.map